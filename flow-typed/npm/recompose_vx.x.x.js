// flow-typed signature: d31ee6940c94e3db474b940d49338a59
// flow-typed version: <<STUB>>/recompose_v^0.21.2/flow_v0.38.0

/**
 * This is an autogenerated libdef stub for:
 *
 *   'recompose'
 *
 * Fill this stub out by replacing all the `any` types.
 *
 * Once filled out, we encourage you to share your work with the
 * community by sending a pull request to:
 * https://github.com/flowtype/flow-typed
 */

declare module 'recompose' {
  declare var exports: any;
}

/**
 * We include stubs for each file inside this npm package in case you need to
 * require those files directly. Feel free to delete any files that aren't
 * needed.
 */
declare module 'recompose/baconObservableConfig' {
  declare var exports: any;
}

declare module 'recompose/branch' {
  declare var exports: any;
}

declare module 'recompose/build/Recompose' {
  declare var exports: any;
}

declare module 'recompose/build/Recompose.min' {
  declare var exports: any;
}

declare module 'recompose/componentFromProp' {
  declare var exports: any;
}

declare module 'recompose/componentFromStream' {
  declare var exports: any;
}

declare module 'recompose/compose' {
  declare var exports: any;
}

declare module 'recompose/createEagerElement' {
  declare var exports: any;
}

declare module 'recompose/createEagerFactory' {
  declare var exports: any;
}

declare module 'recompose/createEventHandler' {
  declare var exports: any;
}

declare module 'recompose/createHelper' {
  declare var exports: any;
}

declare module 'recompose/createSink' {
  declare var exports: any;
}

declare module 'recompose/defaultProps' {
  declare var exports: any;
}

declare module 'recompose/flattenProp' {
  declare var exports: any;
}

declare module 'recompose/getContext' {
  declare var exports: any;
}

declare module 'recompose/getDisplayName' {
  declare var exports: any;
}

declare module 'recompose/hoistStatics' {
  declare var exports: any;
}

declare module 'recompose/isClassComponent' {
  declare var exports: any;
}

declare module 'recompose/isReferentiallyTransparentFunctionComponent' {
  declare var exports: any;
}

declare module 'recompose/kefirObservableConfig' {
  declare var exports: any;
}

declare module 'recompose/lifecycle' {
  declare var exports: any;
}

declare module 'recompose/mapProps' {
  declare var exports: any;
}

declare module 'recompose/mapPropsStream' {
  declare var exports: any;
}

declare module 'recompose/mostObservableConfig' {
  declare var exports: any;
}

declare module 'recompose/nest' {
  declare var exports: any;
}

declare module 'recompose/onlyUpdateForKeys' {
  declare var exports: any;
}

declare module 'recompose/onlyUpdateForPropTypes' {
  declare var exports: any;
}

declare module 'recompose/pure' {
  declare var exports: any;
}

declare module 'recompose/renameProp' {
  declare var exports: any;
}

declare module 'recompose/renameProps' {
  declare var exports: any;
}

declare module 'recompose/renderComponent' {
  declare var exports: any;
}

declare module 'recompose/renderNothing' {
  declare var exports: any;
}

declare module 'recompose/rxjs4ObservableConfig' {
  declare var exports: any;
}

declare module 'recompose/rxjsObservableConfig' {
  declare var exports: any;
}

declare module 'recompose/setDisplayName' {
  declare var exports: any;
}

declare module 'recompose/setObservableConfig' {
  declare var exports: any;
}

declare module 'recompose/setPropTypes' {
  declare var exports: any;
}

declare module 'recompose/setStatic' {
  declare var exports: any;
}

declare module 'recompose/shallowEqual' {
  declare var exports: any;
}

declare module 'recompose/shouldUpdate' {
  declare var exports: any;
}

declare module 'recompose/toClass' {
  declare var exports: any;
}

declare module 'recompose/utils/createEagerElementUtil' {
  declare var exports: any;
}

declare module 'recompose/utils/omit' {
  declare var exports: any;
}

declare module 'recompose/utils/pick' {
  declare var exports: any;
}

declare module 'recompose/withContext' {
  declare var exports: any;
}

declare module 'recompose/withHandlers' {
  declare var exports: any;
}

declare module 'recompose/withProps' {
  declare var exports: any;
}

declare module 'recompose/withPropsOnChange' {
  declare var exports: any;
}

declare module 'recompose/withReducer' {
  declare var exports: any;
}

declare module 'recompose/withState' {
  declare var exports: any;
}

declare module 'recompose/wrapDisplayName' {
  declare var exports: any;
}

declare module 'recompose/xstreamObservableConfig' {
  declare var exports: any;
}

// Filename aliases
declare module 'recompose/baconObservableConfig.js' {
  declare var exports: $Exports<'recompose/baconObservableConfig'>;
}
declare module 'recompose/branch.js' {
  declare var exports: $Exports<'recompose/branch'>;
}
declare module 'recompose/build/Recompose.js' {
  declare var exports: $Exports<'recompose/build/Recompose'>;
}
declare module 'recompose/build/Recompose.min.js' {
  declare var exports: $Exports<'recompose/build/Recompose.min'>;
}
declare module 'recompose/componentFromProp.js' {
  declare var exports: $Exports<'recompose/componentFromProp'>;
}
declare module 'recompose/componentFromStream.js' {
  declare var exports: $Exports<'recompose/componentFromStream'>;
}
declare module 'recompose/compose.js' {
  declare var exports: $Exports<'recompose/compose'>;
}
declare module 'recompose/createEagerElement.js' {
  declare var exports: $Exports<'recompose/createEagerElement'>;
}
declare module 'recompose/createEagerFactory.js' {
  declare var exports: $Exports<'recompose/createEagerFactory'>;
}
declare module 'recompose/createEventHandler.js' {
  declare var exports: $Exports<'recompose/createEventHandler'>;
}
declare module 'recompose/createHelper.js' {
  declare var exports: $Exports<'recompose/createHelper'>;
}
declare module 'recompose/createSink.js' {
  declare var exports: $Exports<'recompose/createSink'>;
}
declare module 'recompose/defaultProps.js' {
  declare var exports: $Exports<'recompose/defaultProps'>;
}
declare module 'recompose/flattenProp.js' {
  declare var exports: $Exports<'recompose/flattenProp'>;
}
declare module 'recompose/getContext.js' {
  declare var exports: $Exports<'recompose/getContext'>;
}
declare module 'recompose/getDisplayName.js' {
  declare var exports: $Exports<'recompose/getDisplayName'>;
}
declare module 'recompose/hoistStatics.js' {
  declare var exports: $Exports<'recompose/hoistStatics'>;
}
declare module 'recompose/index' {
  declare var exports: $Exports<'recompose'>;
}
declare module 'recompose/index.js' {
  declare var exports: $Exports<'recompose'>;
}
declare module 'recompose/isClassComponent.js' {
  declare var exports: $Exports<'recompose/isClassComponent'>;
}
declare module 'recompose/isReferentiallyTransparentFunctionComponent.js' {
  declare var exports: $Exports<'recompose/isReferentiallyTransparentFunctionComponent'>;
}
declare module 'recompose/kefirObservableConfig.js' {
  declare var exports: $Exports<'recompose/kefirObservableConfig'>;
}
declare module 'recompose/lifecycle.js' {
  declare var exports: $Exports<'recompose/lifecycle'>;
}
declare module 'recompose/mapProps.js' {
  declare var exports: $Exports<'recompose/mapProps'>;
}
declare module 'recompose/mapPropsStream.js' {
  declare var exports: $Exports<'recompose/mapPropsStream'>;
}
declare module 'recompose/mostObservableConfig.js' {
  declare var exports: $Exports<'recompose/mostObservableConfig'>;
}
declare module 'recompose/nest.js' {
  declare var exports: $Exports<'recompose/nest'>;
}
declare module 'recompose/onlyUpdateForKeys.js' {
  declare var exports: $Exports<'recompose/onlyUpdateForKeys'>;
}
declare module 'recompose/onlyUpdateForPropTypes.js' {
  declare var exports: $Exports<'recompose/onlyUpdateForPropTypes'>;
}
declare module 'recompose/pure.js' {
  declare var exports: $Exports<'recompose/pure'>;
}
declare module 'recompose/renameProp.js' {
  declare var exports: $Exports<'recompose/renameProp'>;
}
declare module 'recompose/renameProps.js' {
  declare var exports: $Exports<'recompose/renameProps'>;
}
declare module 'recompose/renderComponent.js' {
  declare var exports: $Exports<'recompose/renderComponent'>;
}
declare module 'recompose/renderNothing.js' {
  declare var exports: $Exports<'recompose/renderNothing'>;
}
declare module 'recompose/rxjs4ObservableConfig.js' {
  declare var exports: $Exports<'recompose/rxjs4ObservableConfig'>;
}
declare module 'recompose/rxjsObservableConfig.js' {
  declare var exports: $Exports<'recompose/rxjsObservableConfig'>;
}
declare module 'recompose/setDisplayName.js' {
  declare var exports: $Exports<'recompose/setDisplayName'>;
}
declare module 'recompose/setObservableConfig.js' {
  declare var exports: $Exports<'recompose/setObservableConfig'>;
}
declare module 'recompose/setPropTypes.js' {
  declare var exports: $Exports<'recompose/setPropTypes'>;
}
declare module 'recompose/setStatic.js' {
  declare var exports: $Exports<'recompose/setStatic'>;
}
declare module 'recompose/shallowEqual.js' {
  declare var exports: $Exports<'recompose/shallowEqual'>;
}
declare module 'recompose/shouldUpdate.js' {
  declare var exports: $Exports<'recompose/shouldUpdate'>;
}
declare module 'recompose/toClass.js' {
  declare var exports: $Exports<'recompose/toClass'>;
}
declare module 'recompose/utils/createEagerElementUtil.js' {
  declare var exports: $Exports<'recompose/utils/createEagerElementUtil'>;
}
declare module 'recompose/utils/omit.js' {
  declare var exports: $Exports<'recompose/utils/omit'>;
}
declare module 'recompose/utils/pick.js' {
  declare var exports: $Exports<'recompose/utils/pick'>;
}
declare module 'recompose/withContext.js' {
  declare var exports: $Exports<'recompose/withContext'>;
}
declare module 'recompose/withHandlers.js' {
  declare var exports: $Exports<'recompose/withHandlers'>;
}
declare module 'recompose/withProps.js' {
  declare var exports: $Exports<'recompose/withProps'>;
}
declare module 'recompose/withPropsOnChange.js' {
  declare var exports: $Exports<'recompose/withPropsOnChange'>;
}
declare module 'recompose/withReducer.js' {
  declare var exports: $Exports<'recompose/withReducer'>;
}
declare module 'recompose/withState.js' {
  declare var exports: $Exports<'recompose/withState'>;
}
declare module 'recompose/wrapDisplayName.js' {
  declare var exports: $Exports<'recompose/wrapDisplayName'>;
}
declare module 'recompose/xstreamObservableConfig.js' {
  declare var exports: $Exports<'recompose/xstreamObservableConfig'>;
}
